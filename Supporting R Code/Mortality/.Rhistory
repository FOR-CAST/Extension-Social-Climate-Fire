plot(TestingSet$Eff_Windspeed,TestingSet$RDNBR,  pch = 16, xlab = "Effective Windspeed", ylab = "RDNBR")
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit+ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Mediane$fit,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit-ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit+ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit,col="red",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit-ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit+ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit,col="blue",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit-ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
plot(TestingSet$Eff_Windspeed,TestingSet$RDNBR,  pch = 16, xlab = "Effective Windspeed", ylab = "RDNBR")
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit+ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Mediane$fit,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit-ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit+ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit,col="red",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit-ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit+ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit,col="blue",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit-ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(3.5,1.0,legend=c("Maximum Fuels","Median Fuels","Minimum Fuels"),
lty=c(1,1,1),col=c("red","black","blue"))
### Plotting the model
plot(TestingSet$Eff_Windspeed,TestingSet$RDNBR,  pch = 16, xlab = "Effective Windspeed", ylab = "RDNBR")
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit+ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Mediane$fit,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit-ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit+ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit,col="red",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit-ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit+ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit,col="blue",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit-ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(40,600.0,legend=c("Maximum Fuels","Median Fuels","Minimum Fuels"),
lty=c(1,1,1),col=c("red","black","blue"))
knitr::opts_chunk$set(echo = TRUE)
FD_write<-read.csv('Practice_Data/PracticeData.csv')
FD_write$Bark<-FD_write$BT_coeff*FD_write$DBH
Rasters<-stack(paste0("Practice_Data/",list.files("Practice_Data/",pattern="\\.tif$")))
plot(Rasters)
R_df<-as.data.frame(Rasters)
TestingSet<-merge(FD_write,R_df,by="SiteNumbers",all.x=T)
head(FD_write)
Rasters<-stack(paste0("Practice_Data/",list.files("Practice_Data/",pattern="\\.tif$")))
plot(Rasters)
glm1<-with(TestingSet,glm(Dead~Bark+RDNBR,family="binomial"))
summary(glm1)
max(TestingSet$RDNBR)
mean(TestingSet$RDNBR)
BarkThickness<-seq(0,max(TestingSet$Bark),.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,5))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(3.5,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue",))
BarkThickness<-seq(0,max(TestingSet$Bark),.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,5))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(3.5,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,max(TestingSet$Bark),.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,8))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(3.5,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,max(TestingSet$Bark),.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,8))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(6,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,max(TestingSet$Bark),.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,10))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(6,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,10,.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,10))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(6,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,10,.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,10))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(7,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,10,.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,10))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(6.5,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","orange","black","blue"))
BarkThickness<-seq(0,10,.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "Mortality",
ylim=c(0,1.0),xlim=c(0,10))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(6.5,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","black","blue"))
BarkThickness<-seq(0,10,.1)
ysim_LowFlame<-predict(glm1,
data.frame(Bark =BarkThickness,RDNBR=(rep(200,length(BarkThickness)))) ,
type="response",se=T)
ysim_MedianFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(548,length(BarkThickness))) ,
type="response",se=T)
ysim_MaxFlame<-predict(glm1,
data.frame(Bark = BarkThickness,RDNBR=rep(max(1200,na.rm = T),length(BarkThickness))),
type="response",se=T)
### Plotting the model
plot(FD$Bark,FD$Dead,  pch = 16, xlab = "BarkThickness", ylab = "(p) Mortality",
ylim=c(0,1.0),xlim=c(0,10))
#lines(newdata3$LL,col="blue",lwd=3.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit+ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MedianFlame$fit,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MedianFlame$fit-ysim_MedianFlame$se.fit,col="black",lwd=1.0,lty=3.0)
#lines(BarkThickness,ysim_D,col="orange",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit+ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_MaxFlame$fit,col="red",lwd=3.0)
lines(BarkThickness,ysim_MaxFlame$fit-ysim_MaxFlame$se.fit,col="red",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit+ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(BarkThickness,ysim_LowFlame$fit,col="blue",lwd=3.0)
lines(BarkThickness,ysim_LowFlame$fit-ysim_LowFlame$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(6.5,1.0,legend=c("High DNBR (1400)","Mean DNBR (548)","Low DNBR(200)"),lty=c(1,1,1),col=c("red","black","blue"))
FitDBHfunction<-function(Age,par,Obs){
DBH_out<-(par[1]*Age)/(Age+par[2])
return(-sum(dnorm(DBH_out,mean=Obs,sd=3,log=TRUE)))
}
#?optim
DF<-NULL
for( i in unique(FD_write$Species)){
OneSp<-FD_write[FD_write$Species==i,]
opt1=optim(c(60,400),f=FitDBHfunction,
Age=as.numeric(OneSp$Age),
Obs=as.numeric(OneSp$DBH))
par1<-as.numeric(opt1$par[1])
par2<-as.numeric(opt1$par[2])
#par2<-400
DBH_out<-(par1*OneSp$Age)/(OneSp$Age+par2)
plot(OneSp$Age,DBH_out,main=paste0("Species ",i))
points(OneSp$Age,OneSp$DBH,col="red")
MaxBark<-par1*OneSp$BT_coeff
score<-summary(lm(DBH_out~OneSp$DBH))$r.squared
OutRow<-data.frame(Spp=i,
maxDBH=par2,MaxBark=MaxBark[1],score=score)
DF<-rbind(OutRow,DF)
}
print(DF)
glm2<-with(TestingSet,glm(RDNBR~Eff_Windspeed+Fuels+Climatic_Water_Deficit))
summary(glm2)
glm3<-with(TestingSet,glm(RDNBR~Eff_Windspeed+Fuels))
summary(glm3)
### Plotting the model
ysim_No<-with(TestingSet,predict(glm3,
data.frame(Eff_Windspeed = Eff_Windspeed,Fuels=(rep(0,length(Eff_Windspeed)))) ,
type="response",se=T))
ysim_Median<-with(TestingSet,predict(glm3,
data.frame(Eff_Windspeed = Eff_Windspeed,Fuels=(rep(median(Fuels),length(Eff_Windspeed)))) ,
type="response",se=T))
ysim_Max<-with(TestingSet,predict(glm3,
data.frame(Eff_Windspeed = Eff_Windspeed,Fuels=(rep(max(Fuels),length(Eff_Windspeed)))) ,
type="response",se=T))
plot(TestingSet$Eff_Windspeed,TestingSet$RDNBR,  pch = 16, xlab = "Effective Windspeed", ylab = "RDNBR")
lines(TestingSet$Eff_Windspeed,ysim_Median$fit+ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Mediane$fit,col="orange",lwd=3.0)
### Plotting the model
ysim_No<-with(TestingSet,predict(glm3,
data.frame(Eff_Windspeed = Eff_Windspeed,Fuels=(rep(0,length(Eff_Windspeed)))) ,
type="response",se=T))
ysim_Median<-with(TestingSet,predict(glm3,
data.frame(Eff_Windspeed = Eff_Windspeed,Fuels=(rep(median(Fuels),length(Eff_Windspeed)))) ,
type="response",se=T))
ysim_Max<-with(TestingSet,predict(glm3,
data.frame(Eff_Windspeed = Eff_Windspeed,Fuels=(rep(max(Fuels),length(Eff_Windspeed)))) ,
type="response",se=T))
plot(TestingSet$Eff_Windspeed,TestingSet$RDNBR,  pch = 16, xlab = "Effective Windspeed", ylab = "RDNBR")
lines(TestingSet$Eff_Windspeed,ysim_Median$fit+ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit,col="orange",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Median$fit-ysim_Median$se.fit,col="black",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit+ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit,col="red",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_Max$fit-ysim_Max$se.fit,col="red",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit+ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit,col="blue",lwd=3.0)
lines(TestingSet$Eff_Windspeed,ysim_No$fit-ysim_No$se.fit,col="blue",lwd=1.0,lty=3.0)
legend(40,600.0,legend=c("Maximum Fuels","Median Fuels","Minimum Fuels"),
lty=c(1,1,1),col=c("red","black","blue"))
FD_write<-read.csv('Practice_Data/PracticeData.csv')
head(FD_write)
FD_write$Bark<-FD_write$BT_coeff*FD_write$DBH
Rasters<-stack(paste0("Practice_Data/",list.files("Practice_Data/",pattern="\\.tif$")))
plot(Rasters)
R_df<-as.data.frame(Rasters)
TestingSet<-merge(FD_write,R_df,by="SiteNumbers",all.x=T)
#Setting up names of fire perimeter shapefiles
years <- 1992:2017
table(climate_day_mat$spread_success)
climate_day_mat<-read.csv("Example.csv")
climate_day_mat<-read.csv("SpreadProcessed_1_13_2.csv")
View(climate_day_mat)
##Renaming columns
#climate_day_complete<-climate_day_complete[,-1]
colnames(climate_day_complete) <- c("ID","FireName",  "date", "wind_region", "fuel_number", "uphill_azi", "slope",
"FWI","WSPD" , "spread","expansion")
climate_day_total<-climate_day_mat[-1]
### Looking at files that have all the nessecary data
climate_day_total<-climate_day_total[climate_day_total$X11_Ecoregions.1!=0,]
##Attaching a unique ID to each row in case we need it later
climate_day_complete <- cbind(1:nrow(climate_day_complete), climate_day_complete)
##Renaming columns
#climate_day_complete<-climate_day_complete[,-1]
colnames(climate_day_complete) <- c("ID","FireName",  "date", "wind_region", "fuel_number", "uphill_azi", "slope",
"FWI","WSPD" , "spread","expansion")
climate_day_mat<-read.csv("SpreadProcessed_1_13_2.csv")
climate_day_total<-climate_day_mat[-1]
### Looking at files that have all the nessecary data
climate_day_total<-climate_day_total[climate_day_total$X11_Ecoregions.1!=0,]
climate_day_complete <- climate_day_total[complete.cases(climate_day_total[2:10]),]
##Attaching a unique ID to each row in case we need it later
climate_day_complete <- cbind(1:nrow(climate_day_complete), climate_day_complete)
##Renaming columns
#climate_day_complete<-climate_day_complete[,-1]
colnames(climate_day_complete) <- c("ID","FireName",  "date", "wind_region", "fuel_number", "uphill_azi", "slope",
"FWI","WSPD" , "spread","expansion")
View(climate_day_complete)
U_b <- 5 # This changes based on fire severity. Combustion bounancy.
relative_wd <- as.numeric(climate_day_complete$WSPD) - as.numeric(climate_day_complete$uphill_azi)
climate_day_complete$effective_wsv <- U_b * ((fix(climate_day_complete$WSPD)/U_b) ^ 2 + 2*(fix(climate_day_complete$WSPD)/U_b) *
sin(fix(climate_day_complete$slope)) * cos(relative_wd) + (sin(fix(climate_day_complete$slope))^2)^0.5)
### This function fits numbers accidentally turned to characters.
fix<-function(x){
return(as.numeric(as.character(x)))
}
climate_day_complete$effective_wsv <- U_b * ((fix(climate_day_complete$WSPD)/U_b) ^ 2 + 2*(fix(climate_day_complete$WSPD)/U_b) *
sin(fix(climate_day_complete$slope)) * cos(relative_wd) + (sin(fix(climate_day_complete$slope))^2)^0.5)
relative_wd
climate_day_complete$effective_wsv <- U_b * ((fix(climate_day_complete$WSPD)/U_b) ^ 2 + 2*(fix(climate_day_complete$WSPD)/U_b) *
sin(fix(climate_day_complete$slope)) * cos(relative_wd) + (sin(fix(climate_day_complete$slope))^2)^0.5)
hexbinplot(fix(climate_day_complete$spread)~fix(climate_day_complete$FWI),xlab="FWI",ylab="Spread",xbins=50,aspect=1,type="r")
hexbinplot(fix(climate_day_complete$spread)~fix(climate_day_complete$effective_wsv),xlab="Wind Speed",ylab="Spread",xbins=50,aspect=1,type="r")
hexbinplot(fix(climate_day_complete$spread)~fix(climate_day_complete$FWI),xlab="FWI",ylab="Spread",xbins=50,aspect=1,type="r")
hexbinplot(fix(climate_day_complete$spread)~fix(climate_day_complete$effective_wsv),xlab="Wind Speed",ylab="Spread",xbins=50,aspect=1,type="r")
hexbinplot(fix(climate_day_complete$spread)~fix(climate_day_complete$fuel_number),xlab="Fuel number",ylab="Spread",xbins=50,aspect=1,type="r")
hexbinplot(fix(climate_day_complete$expansion)~fix(climate_day_complete$FWI),xlab="FWI",ylab="Spread",xbins=50,aspect=1,type="r")
hexbinplot(fix(climate_day_complete$expansion)~fix(climate_day_complete$effective_wsv),xlab="Wind Speed",ylab="Spread",xbins=50,aspect=1,type="r")
spread_vars_short<-climate_day_complete
table(spread_vars_short$spread)
Full_logit <- glm(spread ~fix(FWI),
data = spread_vars_short, family = "binomial")
summary(Full_logit)
#hist(spread_vars_short$finefuels)
AIC(Full_logit)
spread_vars_short<-climate_day_complete
table(spread_vars_short$spread)
Full_logit <- glm(spread ~fix(FWI),
data = spread_vars_short, family = "binomial")
summary(Full_logit)
AIC(Full_logit)
spread_vars_short<-climate_day_complete
table(spread_vars_short$spread)
Full_logit <- glm(spread ~fix(FWI)+fix(effective_wsv)+fix(fuel_number),
data = spread_vars_short, family = "binomial")
summary(Full_logit)
AIC(Full_logit)
FWI<-seq(0,max(spread_vars_short$FWI),.5)
xB<-exp((-0.892329)+ 0.039216*(FWI))
binomial2<-xB/(1+xB)
xB<-exp(( -0.892329  )+ 0.039216*(FWI))
binomial2min<-xB/(1+xB)
xB<-exp(( -0.892329  )+  0.039216*(FWI))
binomial2mean<-xB/(1+xB)
plot(FWI,binomial2,xlab="Fire Weather Index",ylab="Spread Probability",ylim=c(0,1),col="red")
points(FWI,binomial2mean)
points(FWI,binomial2min,col="blue")
FWI<-seq(0,max(spread_vars_short$FWI),.5)
xB<-exp(( -1.259443 )+ 0.036959*(FWI)+0.694115*max(spread_vars_short$fuel_number))
binomial2<-xB/(1+xB)
xB<-exp(( -1.259443 )+ 0.036959*(FWI)+0.694115*min(spread_vars_short$fuel_number))
binomial2min<-xB/(1+xB)
xB<-exp(( -1.259443 )+ 0.036959*(FWI)+0.694115*mean(spread_vars_short$fuel_number))
binomial2mean<-xB/(1+xB)
plot(FWI,binomial2,xlab="Fire Weather Index",ylab="Spread Probability",ylim=c(0,1),col="red",type="l",lwd=3.0,cex=1.2,cex.axis=1.2,cex.lab=1.2,
main="Probablity of Spread")
lines(FWI,binomial2mean,lwd=3.0)
lines(FWI,binomial2min,col="blue",lwd=3.0)
legend(0,1.0,legend=c("High Fine Fuels","Median Fine Fuels"," Low Fine Fuels"),
lty=c(1,1,1),lwd=c(3,3,3),col=c("red","black","blue"))
Par_logit <- glm(spread ~fix(FWI)+fix(fuel_number),
data = spread_vars_short, family = "binomial")
summary(Full_logit)
AIC(Full_logit)
Par_logit <- glm(spread ~fix(FWI)+fix(fuel_number),
data = spread_vars_short, family = "binomial")
summary(Par_logit)
AIC(Par_logit)
FWI<-seq(0,max(spread_vars_short$FWI),.5)
xB<-exp(( -1.259443 )+ 0.036959*(FWI)+2.271e-04*max(spread_vars_short$fuel_number))
binomial2<-xB/(1+xB)
xB<-exp(( -1.259443 )+ 0.036959*(FWI)+2.271e-04*min(spread_vars_short$fuel_number))
binomial2min<-xB/(1+xB)
xB<-exp(( -1.259443 )+ 0.036959*(FWI)+2.271e-04*mean(spread_vars_short$fuel_number))
binomial2mean<-xB/(1+xB)
plot(FWI,binomial2,xlab="Fire Weather Index",ylab="Spread Probability",ylim=c(0,1),col="red",type="l",lwd=3.0,cex=1.2,cex.axis=1.2,cex.lab=1.2,
main="Probablity of Spread")
lines(FWI,binomial2mean,lwd=3.0)
lines(FWI,binomial2min,col="blue",lwd=3.0)
legend(0,1.0,legend=c("High Fine Fuels","Median Fine Fuels"," Low Fine Fuels"),
lty=c(1,1,1),lwd=c(3,3,3),col=c("red","black","blue"))
check<-aggregate(x=list(Ws=climate_day_complete$effective_wsv,FWI=as.numeric(climate_day_complete$FWI)),
by=list(date=climate_day_complete$dat,expansion=as.numeric(climate_day_complete$expansion)),FUN=mean)
check$RWS<-round(check$Ws)
check$RFWI<-round(check$FWI)
#check<-check[-100,]
#check<-aggregate(x=list(as.numeric(check$expansion)),
#          by=list(FWI=as.numeric(check$RFWI)),FUN=max)
mean(check$expansion)
plot(fix(check$expansion)~fix(check$FWI),xlab="FWI",pch=19,col=adjustcolor("red",alpha.f = .3),ylab="Spread",cex.lab=1.2,cex.axis=1.2)
plot(fix(check$expansion)~fix(check$Ws),xlab="Wind Speed",ylab="Spread",pch=19,col=adjustcolor("red",alpha.f = .3),cex.lab=1.2,cex.axis=1.2)
Expansionfull<-lm(fix(expansion) ~FWI , data =check)
#?glm()
summary(Expansionfull)
FwI<-seq(0,max(spread_vars_short$FWI),.5)
FWI_Spread<- 282.877+(5.059*FwI)
plot(FwI,FWI_Spread,xlab="FWI",ylab="Spread per day")
FwI<-seq(0,max(spread_vars_short$FWI),.5)
FWI_Spread<- 2.271e-04+(12.50*FwI)
plot(FwI,FWI_Spread,xlab="FWI",ylab="Spread per day")
FwI<-seq(0,max(spread_vars_short$FWI),.5)
FWI_Spread<- 699.00 +(12.50*FwI)
plot(FwI,FWI_Spread,xlab="FWI",ylab="Spread per day")
paste(w_dir,"Inputs/fire_geomac_loc.shp",sep="")
